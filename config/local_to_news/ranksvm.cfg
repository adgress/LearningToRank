# Location of test/train data, with trailing slash
input_dir=../
# Training files should be of format $train_name.i.fv/$train_name.i.quj,
# where i = 1:num_train_test_splits
train_name=local_common_features/train.local
# Test files should follow format of training files
test_name=news_common_features/test.news

num_train_test_splits=10

ndcg_rank=5

# Number of iterations to run learner at each sampling rate
# Results will be averaged over the iterations
iterations=10

cvx_path=../cvx

# Matlab-format matrix, in quotes for bash to process
# Gives percentage(s) of training data file to use
sampling_rate='[0.01:0.01:0.06]'


# Results will be stored in a Matlab cell array, saved in
# a .mat file. The variable will be called 'results'.
# results('learner') gives the learner used
# results('ndcg_<#>') gives the averaged ndcg_rank for test split #
# results('var_<#>') gives the variance for that test split
# Output directory, with trailing /
output_dir=./results/local_to_news/
# Output .mat file
results_file=ranksvm.mat

# Which learning algorithm to train
# Relative Attributes = 1
# ALTR Linear Kernel = 2
# ALTR Poly Kernel = 3
# Random = 4
# RankSVM = 6
# ALTR RBF Kernel = 7
# ALTR Linear Kernel, Chunking = 8
# ALTR Poly Kernel, Chunking = 9
# Multi Attribute learner = 10 (requires optional parameters below)
learner=6

# Required for Multi Attribute learner
# Leave blank for others
# num_quj_columns_2 must equal 0 or some numeric value
input_dir_2=
train_name_2=
test_name_2=
num_quj_columns_2=0
